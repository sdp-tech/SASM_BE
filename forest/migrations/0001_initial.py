# Generated by Django 4.0 on 2023-06-04 14:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import forest.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0010_user_introduction'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Forest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('content', models.TextField(max_length=50000)),
                ('like_cnt', models.PositiveIntegerField(default=0)),
                ('view_cnt', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forests', to='forest.category')),
                ('likeuser_set', models.ManyToManyField(blank=True, related_name='liked_forests', to=settings.AUTH_USER_MODEL)),
                ('writer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forests', to='users.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SemiCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='semicategories', to='forest.category')),
                ('forest', models.ManyToManyField(blank=True, related_name='semicategories', to='forest.Forest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(choices=[('지나친 광고성 컨텐츠입니다.(상업적 홍보)', '지나친 광고성 컨텐츠입니다.(상업적 홍보)'), ('욕설이 포함된 컨텐츠입니다.', '욕설이 포함된 컨텐츠입니다.'), ('성희롱이 포함된 컨텐츠입니다.', '성희롱이 포함된 컨텐츠입니다.')], max_length=30)),
                ('forest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='forest.forest')),
                ('reporter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forest_reports', to='users.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForestPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(default='forest_image.png', upload_to=forest.models.get_forest_photo_upload_path)),
                ('forest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='forest.forest')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ForestHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=10)),
                ('forest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hashtags', to='forest.forest')),
            ],
        ),
        migrations.AddConstraint(
            model_name='foresthashtag',
            constraint=models.UniqueConstraint(fields=('name', 'forest'), name='forest_can_have_hashtag_with_unique_name_constraint'),
        ),
    ]
